@page "/"
@using MailLobbyer.CSVServiceComponent
@using MailLobbyer.EmailHandlerComponent
@using MailLobbyer.FileHandlerComponent
@using MailLobbyer.CSVFileClass
@using MailLobbyer.ContactClass
@using MailLobbyer.SmtpClientSettingsClass

<PageTitle>Email</PageTitle>

@if (displaysettingsform)
{
    <h1 class="page-title">Email Settings</h1>
    <form class="input-form" @onsubmit="SettingsFormSubmitHandler">
    <div class="form-group">
        <label for="sendername">Sender name:</label>
        <input type="text" id="sendername" name="sendername" class="form-control" @bind="definedsendername" aria-label="Sender name" required />
    </div>

    <div class="form-group">
        <label for="senderemail">Sender email:</label>
        <input type="email" id="senderemail" name="senderemail" class="form-control" @bind="definedsenderemail" aria-label="Sender email" required />
    </div>

    <div class="form-group">
        <label for="username">SMTP username:</label>
        <input type="text" id="username" name="username" class="form-control" @bind="definedusername" aria-label="SMTP username" required />
    </div>

    <div class="form-group">
        <label for="password">SMTP password:</label>
        <input type="password" id="password" name="password" class="form-control" @bind="definedpassword" aria-label="SMTP password" required />
    </div>

    <div class="form-group">
        <label for="host">SMTP host:</label>
        <input type="text" id="host" name="host" class="form-control" @bind="definedhost" aria-label="SMTP host" required />
    </div>

    <div class="form-group">
        <label for="port">SMTP port:</label>
        <input type="text" id="port" name="port" class="form-control" @bind="definedport" aria-label="SMTP port" required />
    </div>

    <button type="submit" class="btn btn-primary">Continue</button>
    </form>
}
@if(displaycsvform)
{
    <h1 class="page-title">CSV group selection</h1>
    <form class="input-form" @onsubmit="CSVFormSubmitHandler">
        <div class="form-group">
            <label for="inputcsvfile">Please upload a CSV file:</label>
                <div class="custom-inputfile">
                    <InputFile id="inputcsvfile" accept="text/csv" OnChange="@CSVFileUploadHandler" required/>
                </div>
        </div>

        <button type="submit" class="btn btn-primary">Upload</button>

    </form>
    
}
@if (displayemailform)
{
    <h1 class="page-title">Email</h1>
    <form class="input-form" @onsubmit="EmailFormSubmitHandler">
    <div class="form-group">
        <label for="subject">Subject:</label>
        <input type="text" id="subject" class="form-control" @bind="subject" aria-label="Subject" />
    </div>

    <div class="form-group">
        <label for="body">Body:</label>
        <textarea id="body" class="form-control" @bind="body" aria-label="Body"></textarea>
    </div>

    <div class="form-group">
            <label for="inputfiles">Upload file attachments:</label>
                <div class="custom-inputfile">
                    <InputFile id="inputfiles" accept="text/csv" OnChange="@FileUploadHandler"/>
                </div>
    </div>

    <div class="form-group">
        <label>Contact exclusion:</label>

        @foreach (Contact contact in csvserviceinstance.contacts)
        {
            <div class="subform-group">
                <label for="excludecontacts">@string.Concat(contact.Forename, " ", contact.Surname) - @contact.Email</label>
                <input type="checkbox" id="excludecontacts" value="@contact.Email" checked="@contact.IsSelected" @onchange="() => ToggleContactExclusion(contact)" aria-label="Exclude contact: @(string.Concat(contact.Forename, " ", contact.Surname) + " - " + contact.Email)" />
            </div>
        }
    </div>

    <button type="submit" class="btn btn-primary">Send</button>

    </form>

}


@code {
    private string definedsendername;
    private string definedsenderemail;
    private string definedusername;
    private string definedpassword;
    private string definedhost = "smtp.gmail.com";
    private int definedport = 587;
    private bool displaysettingsform = true;
    private bool displaycsvform = false;
    private bool displayemailform = false;
    private SmtpClientSettings smtpclientsettings;
    private string subject;
    private string body;
    private IBrowserFile selectedcsvfile;
    private List<IBrowserFile> selectedfiles = new List<IBrowserFile>();
    private string selectedgroup;
    

    CSVService csvserviceinstance = new CSVService();

    private async void CSVFileUploadHandler(InputFileChangeEventArgs e)
    {
        selectedcsvfile = e.File;
    }

    private void FileUploadHandler(InputFileChangeEventArgs e)
    {
        selectedfiles = e.GetMultipleFiles().ToList();
    }

    private void ToggleContactExclusion(Contact contact)
    {
        contact.IsSelected = !contact.IsSelected;
    }

    private async Task SettingsFormSubmitHandler()
    {
        smtpclientsettings = new SmtpClientSettings(definedsendername, definedsenderemail,definedusername,definedpassword,definedhost,definedport);
        displaysettingsform = false;
        displaycsvform = true;
    }

    private async Task CSVFormSubmitHandler()
    {
        if (selectedcsvfile != null)
        {
            await csvserviceinstance.CSVParser(selectedcsvfile);
            displaycsvform = false;
            displayemailform = true;
        }
        else
        {
            return;
        }
    }

    private async Task EmailFormSubmitHandler()
    {
        EmailHandler emailhandlerinstance = new EmailHandler();
        FileHandler filehandlerinstance = new FileHandler();

        await filehandlerinstance.ExtractUploadedFileContents(selectedfiles);

        foreach (Contact contact in csvserviceinstance.contacts)
        {
            if (!contact.IsSelected == true)
            {
                await emailhandlerinstance.EmailSyntaxHandler(smtpclientsettings,subject, body, contact, filehandlerinstance.fileuploads);
            }
        }

        // Reset form fields
        subject = string.Empty;
        body = string.Empty;
        selectedfiles = new List<IBrowserFile>();
        selectedgroup = string.Empty;
        displayemailform = false;
        displaysettingsform = true;
    }
}
